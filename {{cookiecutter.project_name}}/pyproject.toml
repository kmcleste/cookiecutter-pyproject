[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.open_source_license}}"
readme = "README.md"
homepage = "https://{{cookiecutter.github_username}}.github.io/{{cookiecutter.project_name}}/"
repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_name}}"
keywords = ["python"]
include = ["LICENSE"]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [{include = "{{cookiecutter.project_slug}}"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.11"


[tool.poetry.group.dev.dependencies]
black = "22.6.0"
flake8 = "^6.0.0"
pre-commit = "^2.21.0"
pytest = "^7.2.0"
coverage = "^7.0.1"
bandit = {extras = ["toml"], version = "^1.7.4"}
mkdocs = "^1.4.2"
mkdocs-material = "^9.0.6"
mkdocstrings = "^0.20.0"
commitizen = "^2.40.0"
autoflake = "^2.0.1"
isort = "^5.12.0"
mkdocstrings-python = "^0.8.3"
pyupgrade = "^3.3.1"
rich = "^13.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = []

[tool.commitizen]
name = "cz_conventional_commits"
version = "{{cookiecutter.version}}"
tag_format = "v$version"
version_files = ["pyproject.toml:version", "{{cookiecutter.project_slug}}/__version__.py"]
update_changelog_on_bump = true

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
include = '\.pyi?'

[tool.bandit]
skips = ["B101", "B104", "B501", "B603", "B607"]

[tool.isort]
profile = "black"
src_paths = ["{{cookiecutter.project_slug}}"]